package edu.utep.cybershare.elseweb.ontology.impl;

import edu.utep.cybershare.elseweb.ontology.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;
import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultBand <br>
 * @version generated on Thu Feb 13 13:45:51 GMT-07:00 2014 by nick
 */
public class DefaultBand extends WrappedIndividualImpl implements Band {

    public DefaultBand(OWLOntology ontology, IRI iri) {
        super(ontology, iri);
    }





    /* ***************************************************
     * Object Property http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-data.owl#hasBandIdentification
     */
     
    public Collection<? extends BandIdentification> getHasBandIdentification() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASBANDIDENTIFICATION,
                                               DefaultBandIdentification.class);
    }

    public boolean hasHasBandIdentification() {
	   return !getHasBandIdentification().isEmpty();
    }

    public void addHasBandIdentification(BandIdentification newHasBandIdentification) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASBANDIDENTIFICATION,
                                       newHasBandIdentification);
    }

    public void removeHasBandIdentification(BandIdentification oldHasBandIdentification) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASBANDIDENTIFICATION,
                                          oldHasBandIdentification);
    }


}
