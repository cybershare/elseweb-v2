package edu.utep.cybershare.elseweb.ontology.impl;

import edu.utep.cybershare.elseweb.ontology.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;
import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultDateRange <br>
 * @version generated on Thu Feb 13 13:45:51 GMT-07:00 2014 by nick
 */
public class DefaultDateRange extends WrappedIndividualImpl implements DateRange {

    public DefaultDateRange(OWLOntology ontology, IRI iri) {
        super(ontology, iri);
    }





    /* ***************************************************
     * Object Property http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-data.owl#hasEndDate
     */
     
    public Collection<? extends Date> getHasEndDate() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASENDDATE,
                                               DefaultDate.class);
    }

    public boolean hasHasEndDate() {
	   return !getHasEndDate().isEmpty();
    }

    public void addHasEndDate(Date newHasEndDate) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASENDDATE,
                                       newHasEndDate);
    }

    public void removeHasEndDate(Date oldHasEndDate) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASENDDATE,
                                          oldHasEndDate);
    }


    /* ***************************************************
     * Object Property http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-data.owl#hasStartDate
     */
     
    public Collection<? extends Date> getHasStartDate() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASSTARTDATE,
                                               DefaultDate.class);
    }

    public boolean hasHasStartDate() {
	   return !getHasStartDate().isEmpty();
    }

    public void addHasStartDate(Date newHasStartDate) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASSTARTDATE,
                                       newHasStartDate);
    }

    public void removeHasStartDate(Date oldHasStartDate) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASSTARTDATE,
                                          oldHasStartDate);
    }


}
